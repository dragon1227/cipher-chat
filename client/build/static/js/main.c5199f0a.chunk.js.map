{"version":3,"sources":["components/profile/profile.png","components/footer.jsx","services/httpService.js","services/userService.js","components/login.jsx","components/register.jsx","components/chatbox/chatbubble.jsx","components/chatbox/chatbox.jsx","components/chatlist/userItem.jsx","components/chatlist/userLists.jsx","components/profile/displayPic.jsx","components/profile/displayName.jsx","components/profile/displayBio.jsx","components/profile/profile.jsx","components/navBar/navBtn.jsx","components/navBar/navbar.jsx","components/chat/chat.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","react_default","a","createElement","className","httpService","get","axios","post","put","delete","endpoint","getAllUsers","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","http","abrupt","sent","stop","apply","this","arguments","postUser","_ref2","_callee2","data","_context2","_x","updateUser","_ref3","_callee3","_id","_context3","concat","_x2","_x3","checkUsername","_ref4","_callee4","username","_ref5","res","_context4","Boolean","_x4","authUser","_ref6","_callee5","auth","_context5","_x5","getUserProfile","_ref7","_callee6","token","config","_context6","localStorage","getItem","headers","x-auth-token","SHA256","CryptoJS","Login","history","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","password","setPassword","handleSubmit","e","userToken","preventDefault","alert","toString","setItem","push","t0","console","log","clear","onSubmit","type","placeholder","value","onChange","target","href","Register","passPhrase","privateKey","publicKey","cryptico","generateRSAKey","publicKeyString","ChatBubble","name","message","timestamp","parentBubContStyle","bubContStyle","displayName","id","dateTimestamp","Date","month","getMonth","date","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","displayTimestamp","socket","openSocket","ChatBox","user","match","setMessage","chats","setChats","channel","params","useEffect","connect","emit","disconnect","on","updateChats","chat","toConsumableArray","updateScroll","sendMessage","chatMessage","chatbox","document","getElementById","scrollTop","scrollHeight","length","map","m","chatbox_chatbubble","assign","key","indexOf","onClick","MD5","UserItem","currUser","sorted","sort","channelId","join","UserLists","users","setUsers","search","setSearch","getUsers","Fragment","u","userItem","DisplayPic","alt","src","displayPic","width","DisplayName","DisplayBio","bio","onSave","onEdit","setOnEdit","_bio","setBio","flipEdit","maxLength","Profile","onUpdateBio","profile_displayName","displayBio","window","location","NavBtn","link","fa","label","navigate","NavBar","navs","nav","navBtn","Chat","setUser","error","getUser","handleUpdateUserBio","_user","objectSpread","components_profile_profile","navbar","react_router","path","render","props","chatbox_chatbox","userLists","from","to","App","component","footer","hostname","ReactDOM","react_router_dom","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5199f0a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.185df7f9.png\";","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"container\">\n      <small> CipherChat | About</small>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete\n};\n","import http from \"./httpService\";\n\nconst endpoint = \"/api/users\";\n\nexport const getAllUsers = async () => {\n  return await http.get(endpoint);\n}\n\nexport const postUser = async data => {\n  return await http.post(endpoint, data);\n};\n\nexport const updateUser = async (_id, data) => {\n  return await http.put(`${endpoint}/${_id}`, data);\n}\n\nexport const checkUsername = async username => {\n  const { data: res } = await http.get(`${endpoint}/${username}`);\n\n  return Boolean(res);\n};\n\nexport const authUser = async auth => {\n  return http.post(`${endpoint}/auth/`, auth);\n};\n\nexport const getUserProfile = async () => {\n  const token = localStorage.getItem(\"userToken\");\n  const config = {\n    headers: {\n      \"x-auth-token\": token\n    }\n  };\n\n  return http.get(`${endpoint}/auth`, config);\n};\n","import React, { useState } from \"react\";\nimport { authUser, checkUsername } from \"../services/userService\";\nimport CryptoJS from \"crypto-js\";\nconst { SHA256 } = CryptoJS;\n\nconst Login = ({ history }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const isExisting = await checkUsername(username);\n    if (!isExisting) return alert(\"User with the username not found.\");\n\n    const auth = SHA256(username + password).toString();\n    localStorage.setItem(\"pvk_phrase\", SHA256(auth + password));\n\n    try {\n      const { data: userToken } = await authUser({ auth });\n      localStorage.setItem(\"userToken\", userToken);\n\n      alert(\"Account authenticated!\");\n      history.push(\"/chat\");\n    } catch (err) {\n      console.log(err);\n      localStorage.clear();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"mb\"\n          type=\"text\"\n          placeholder=\"Pseudoname\"\n          value={username}\n          onChange={({ target }) => setUsername(target.value)}\n        />\n        <input\n          className=\"mb\"\n          type=\"password\"\n          placeholder=\"Secret Password\"\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n        />\n        <input className=\"btn-dark\" type=\"submit\" value=\"Login\" />\n\n        <a href=\"/register\">Don't have an account yet?</a>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { postUser, checkUsername } from \"../services/userService\";\nimport CryptoJS from \"crypto-js\";\nimport cryptico from \"cryptico\";\nconst { SHA256 } = CryptoJS;\n\nconst Register = ({ history }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const isExisting = await checkUsername(username);\n    if (isExisting) return alert(\"User with the username already exists\");\n\n    const auth = SHA256(username + password).toString();\n    const passPhrase = SHA256(auth + password);\n    const privateKey = cryptico.generateRSAKey(passPhrase, 1024);\n    const publicKey = cryptico.publicKeyString(privateKey);\n\n    try {\n      await postUser({ username, auth, publicKey });\n      alert(\"Account has been created.\")\n      history.push(\"/login\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"mb\"\n          type=\"text\"\n          placeholder=\"Pseudoname\"\n          value={username}\n          onChange={({ target }) => setUsername(target.value)}\n        />\n        <input\n          className=\"mb\"\n          type=\"password\"\n          placeholder=\"Secret Password\"\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n        />\n\n        <input className=\"btn-dark\" type=\"submit\" value=\"Register\" />\n\n        <a href=\"/login\">Already have an account?</a>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\nimport \"./chatbubble.css\";\n\nconst ChatBubble = ({ username, name, message, timestamp }) => {\n  const parentBubContStyle = name === username ? \"float-right max-width\" : \"\";\n  const bubContStyle = name === username ? \"float-right text-align-right\" : \"\";\n  const displayName = name === username ? \"You\" : name;\n\n  const displayTimestamp = () => {\n    const dateTimestamp = new Date(timestamp);\n\n    const month = dateTimestamp.getMonth();\n    const date = dateTimestamp.getDate();\n    const year = dateTimestamp.getFullYear();\n    const hours = dateTimestamp.getHours();\n    const minutes = dateTimestamp.getMinutes();\n\n    return `${month}/${date}/${year} - ${hours}:${minutes}`;\n  };\n\n  return (\n    <div className={parentBubContStyle}>\n      <div id=\"bubble-container\" className={bubContStyle}>\n        <b>{displayName}</b> <br />\n        <span id=\"message-bubble\">{message}</span> <br />\n        <small>{displayTimestamp()}</small>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBubble;\n","import React, { useState, useEffect } from \"react\";\nimport \"./chatbox.css\";\nimport ChatBubble from \"./chatbubble\";\n\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket();\n\nconst ChatBox = ({ user, match }) => {\n  const [message, setMessage] = useState(\"\");\n  const [chats, setChats] = useState([]);\n\n  const channel = match.params.channel;\n\n  useEffect(() => {\n    socket.connect();\n\n    socket.emit(\"get-chats\", channel);\n\n    return () => socket.disconnect();    \n  }, []);\n\n  socket.on(\"return-chats\", chats => {\n    updateChats(chats);\n  });\n\n  socket.on(\"new-message\", chat => {\n    updateChats([...chats, chat]);\n  });\n\n  const updateChats = chats => {\n    setChats(chats);\n    updateScroll();\n  };\n\n  const handleMessageChange = ({ target }) => {\n    setMessage(target.value);\n  };\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    const chatMessage = {\n      name: user.username,\n      channel,\n      message,\n      timestamp: new Date()\n    };\n\n    socket.emit(\"send-message\", chatMessage);\n\n    setMessage(\"\");\n  };\n\n  const updateScroll = () => {\n    const chatbox = document.getElementById(\"chatbox\");\n    chatbox.scrollTop = chatbox.scrollHeight;\n  };\n\n  const populateChatBox = () => {\n    return chats.length === 0 ? (\n      <div className=\"chat-notif\">No messages yet. Say hello!</div>\n    ) : (\n      chats.map(m => (\n        <ChatBubble key={chats.indexOf(m)} username={user.username} {...m} />\n      ))\n    );\n  };\n\n  return (\n    <div className=\"grid-container chatbox-container\">\n      <div id=\"chatbox\">{populateChatBox()}</div>\n\n      <div className=\"message-form\">\n        <form onSubmit={sendMessage}>\n          <input\n            value={message}\n            onChange={handleMessageChange}\n            placeholder=\"Type a message...\"\n            type=\"text\"\n          />\n        </form>\n      </div>\n\n      <div className=\"message-submit\">\n        <button onClick={sendMessage}>\n          <i className=\"fas fa-paper-plane\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n","import React from \"react\";\nimport CryptoJS from \"crypto-js\";\nconst MD5 = CryptoJS.MD5;\n\nconst UserItem = ({ user, currUser, history }) => {\n  const handleChannelOpen = () => {\n    const { auth: userAuth } = user;\n    const { auth: currUserAuth } = currUser;\n    const sorted = [userAuth, currUserAuth].sort();\n    const channelId = MD5(sorted.join());\n\n    history.push(\"/chat/ch/\" + channelId);\n  };\n\n  return (\n    <div className=\"container-item mb\">\n      <b>{user.username}</b>\n      <button onClick={handleChannelOpen}>\n        {\" \"}\n        <i className=\"fas fa-comment\" />\n      </button>\n    </div>\n  );\n};\n\nexport default UserItem;\n","import React, { useState, useEffect } from \"react\";\nimport UserItem from \"./userItem\";\nimport \"./userList.css\";\nimport { getAllUsers } from \"../../services/userService\";\n\nconst UserLists = ({ user, history }) => {\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    const getUsers = async () => {\n      const { data: users } = await getAllUsers();\n\n      setUsers(users);\n    };\n\n    getUsers();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className=\"list mb\">\n        {users.map(u => (\n          <UserItem\n            key={users.indexOf(u)}\n            user={u}\n            currUser={user}\n            history={history}\n          />\n        ))}\n      </div>\n\n      <input\n        value={search}\n        onChange={({ target }) => setSearch(target.value)}\n        placeholder=\"Search for someone to chat...\"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default UserLists;\n","import React from \"react\";\nimport displayPic from \"./profile.png\";\n\nconst DisplayPic = () => {\n  return (\n    <div id=\"display-pic\">\n      <img alt=\"anon\" src={displayPic} width=\"42\" />\n    </div>\n  );\n};\n\nexport default DisplayPic;\n","import React from \"react\";\n\nconst DisplayName = ({ username }) => {\n  return (\n    <div id=\"display-name\">\n      <b>{username || \"Loading...\"}</b>\n    </div>\n  );\n};\n\nexport default DisplayName;\n","import React, { useState, useEffect } from \"react\";\n\nconst DisplayBio = ({ bio, onSave }) => {\n  const [onEdit, setOnEdit] = useState(false);\n  const [_bio, setBio] = useState(\"\");\n\n  const flipEdit = () => setOnEdit(!onEdit);\n  const handleSave = () => {\n    if (bio === _bio) return flipEdit();\n    onSave(_bio);\n    flipEdit();\n  };\n\n  useEffect(() => {\n    setBio(bio);\n  }, [bio]);\n\n  return (\n    <div id=\"display-bio\">\n      {onEdit ? (\n        <React.Fragment>\n          <input\n            maxLength=\"50\"\n            value={_bio}\n            onChange={({ target }) => setBio(target.value)}\n          />\n          <i onClick={handleSave} className=\"fas fa-save\" />\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <small>{bio || \"bio\"}</small>\n          <i onClick={flipEdit} className=\"fas fa-edit\" />\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default DisplayBio;\n","import React from \"react\";\nimport \"./profile.css\";\nimport DisplayPic from \"./displayPic\";\nimport DisplayName from \"./displayName\";\nimport DisplayBio from \"./displayBio\";\n\nconst Profile = ({ user, onUpdateBio }) => {\n  const handleLogout = () => {\n    localStorage.clear();\n\n    window.location = \"/\"\n  };\n\n  return (\n    <div className=\"container grid-container\">\n      <DisplayPic />\n\n      <DisplayName username={user.username} />\n\n      <DisplayBio onSave={onUpdateBio} bio={user.bio} />\n\n      <div onClick={handleLogout} id=\"logout\">\n        <button>\n          <i className=\"fas fa-sign-out-alt\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\n\nconst NavBtn = ({link, fa, label, navigate}) => {\n  return (\n    <div>\n      <button\n        onClick={() => {\n            navigate(link);\n        }}\n      >\n        <i className={fa} /> {label}\n      </button>\n    </div>\n  );\n};\n\nexport default NavBtn;\n","import React, { useState } from \"react\";\nimport \"./navBar.css\";\nimport NavBtn from \"./navBtn\";\n\nconst NavBar = ({ history }) => {\n  const [navs, setNavs] = useState([\n    { fa: \"fas fa-search\", label: \"\", link: \"/chat/search\" },\n    { fa: \"fas fa-globe\", label: \"Global\", link: \"/chat/ch/global\" },\n    { fa: \"fas fa-envelope\", label: \"Nicki...\", link: \"/chat/search\" }\n  ]);\n\n  const navigate = link => {\n    history.push(link);\n  };\n\n  return (\n    <div className=\"container-item nav mb\">\n      <div className=\"nav-grid\">\n        {navs.map(nav => (\n          <NavBtn key={navs.indexOf(nav)} {...nav} navigate={navigate}/>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport ChatBox from \"../chatbox/chatbox\";\nimport UserLists from \"../chatlist/userLists\";\nimport Profile from \"../profile/profile\";\nimport NavBar from \"../navBar/navbar\";\nimport { getUserProfile, updateUser } from \"../../services/userService\";\nimport \"./chat.css\";\n\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket();\n\nconst Chat = ({ history }) => {\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    if (socket) console.log(\"Socket Connected!\");\n    else console.error(\"Sockeet connection failed.\");\n\n    const getUser = async () => {\n      const { data: user } = await getUserProfile();\n\n      setUser(user);\n    };\n\n    getUser();\n  }, []);\n\n  const handleUpdateUserBio = async bio => {\n    const _user = { ...user };\n    _user.bio = bio;\n\n    try {\n      await updateUser(user._id, _user);\n      setUser(_user);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Profile\n        onUpdateBio={handleUpdateUserBio}\n        history={history}\n        user={user}\n      />\n      <div className=\"container chat\">\n        <NavBar history={history} />\n\n        <Switch>\n          <Route\n            path=\"/chat/ch/:channel\"\n            render={props => <ChatBox {...props} user={user} />}\n          />\n          <Route\n            path=\"/chat/list\"\n            render={props => <UserLists {...props} user={user} />}\n          />\n          <Redirect from=\"/chat\" to=\"/chat/list\" />\n        </Switch>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport \"./App.css\";\nimport Footer from \"./components/footer\";\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Chat from \"./components/chat/chat\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/chat\" component={Chat} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <Redirect from=\"/\" to=\"/login\" />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}