{"version":3,"sources":["components/profile/profile.jpg","components/footer.jsx","services/httpService.js","services/userService.js","components/login.jsx","components/register.jsx","components/chatbox/chatbubble.jsx","components/chatbox/chatForm.jsx","components/chatbox/chatbox.jsx","components/chatlist/userItem.jsx","components/chatlist/userLists.jsx","components/profile/displayPic.jsx","components/profile/displayName.jsx","components/profile/displayBio.jsx","components/profile/profile.jsx","components/navBar/navBtn.jsx","components/navBar/navbar.jsx","components/chat/chat.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","react_default","a","createElement","className","href","httpService","get","axios","post","put","delete","endpoint","getAllUsers","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","http","abrupt","sent","stop","apply","this","arguments","postUser","_ref2","_callee2","data","_context2","_x","updateUser","_ref3","_callee3","_id","_context3","concat","_x2","_x3","checkUsername","_ref4","_callee4","username","_ref5","res","_context4","Boolean","_x4","authUser","_ref6","_callee5","auth","_context5","_x5","getUserProfile","_ref7","_callee6","token","config","_context6","localStorage","getItem","headers","x-auth-token","SHA256","CryptoJS","Login","history","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","password","setPassword","handleSubmit","e","passPhrase","userToken","preventDefault","alert","toString","setItem","push","t0","console","log","clear","onSubmit","type","placeholder","value","onChange","target","pattern","required","title","Register","privateKey","publicKey","cryptico","generateRSAKey","publicKeyString","ChatBubble","msgObj","isSecret","userKeys","decryptMsg","decrypted","setDecrypted","name","message","timestamp","decrypt","pvk","plaintext","parentBubContStyle","bubContStyle","displayName","handleDecryptMessage","id","onClick","dateTimestamp","Date","month","getMonth","date","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","displayTimestamp","ChatForm","sendMessage","setMessage","handleSendEvent","Fragment","socket","openSocket","ChatBox","user","match","chats","setChats","channel","params","limit","pbkHash","pbk","undefined","useEffect","connect","emit","disconnect","on","returnChats","updateChats","chat","chatLimit","toConsumableArray","splice","msg","_chats","_msg","find","m","newChats","updateScroll","sendSecret","chatMatePbk","userMsg","encryptMsg","chatMateMsg","k","encrypt","cipher","sendPlain","chatbox","document","getElementById","scrollTop","scrollHeight","length","map","chatbox_chatbubble","key","indexOf","chatForm","MD5","UserItem","currUser","setChannel","sorted","sort","channelId","join","UserLists","users","setUsers","search","setSearch","getUsers","filteredUsers","filter","u","RegExp","userItem","DisplayPic","alt","src","displayPic","width","DisplayName","DisplayBio","bio","onSave","onEdit","setOnEdit","_bio","setBio","flipEdit","maxLength","Profile","onUpdateBio","profile_displayName","displayBio","window","location","NavBtn","fa","label","handleClick","NavBar","navBtn","pathname","Chat","setUser","_useState5","_useState6","setUserKeys","getUser","getKeys","pvk_phrase","handleUpdateUserBio","_user","objectSpread","components_profile_profile","navbar","react_router","path","render","props","chatbox_chatbox","assign","userLists","from","to","App","component","aUserIsLoggedIn","checkCurrentUser","footer","hostname","ReactDOM","react_router_dom","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.324882c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.cae08926.jpg\";","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"container\">\n      <small>\n        CipherChat | <a href=\"https://github.com/Dwyte/CipherChat\">About</a>\n      </small>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete\n};\n","import http from \"./httpService\";\n\nconst endpoint = \"/api/users\"; //http://localhost:4200\n\nexport const getAllUsers = async () => {\n  return await http.get(endpoint);\n}\n\nexport const postUser = async data => {\n  return await http.post(endpoint, data);\n};\n\nexport const updateUser = async (_id, data) => {\n  return await http.put(`${endpoint}/${_id}`, data);\n}\n\nexport const checkUsername = async username => {\n  const { data: res } = await http.get(`${endpoint}/${username}`);\n\n  return Boolean(res);\n};\n\nexport const authUser = async auth => {\n  return http.post(`${endpoint}/auth/`, auth);\n};\n\nexport const getUserProfile = async () => {\n  const token = localStorage.getItem(\"userToken\");\n  const config = {\n    headers: {\n      \"x-auth-token\": token\n    }\n  };\n\n  return http.get(`${endpoint}/auth`, config);\n};\n","import React, { useState } from \"react\";\nimport { authUser, checkUsername } from \"../services/userService\";\nimport CryptoJS from \"crypto-js\";\nconst { SHA256 } = CryptoJS;\n\nconst Login = ({ history }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const isExisting = await checkUsername(username);\n    if (!isExisting) return alert(\"User with the username not found.\");\n\n    const auth = SHA256(username + password).toString();\n    const passPhrase = SHA256(auth + password).toString();\n    localStorage.setItem(\"pvk_phrase\", passPhrase);\n\n    try {\n      const { data: userToken } = await authUser({ auth });\n      localStorage.setItem(\"userToken\", userToken);\n\n      alert(\"Account authenticated!\");\n      history.push(\"/chat\");\n    } catch (err) {\n      console.log(err);\n      localStorage.clear();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"mb\"\n          type=\"text\"\n          placeholder=\"Pseudoname\"\n          value={username}\n          onChange={({ target }) => setUsername(target.value)}\n          pattern=\".{2,}\"\n          required\n          title=\"2 characters or more\"\n        />\n        <input\n          className=\"mb\"\n          type=\"password\"\n          placeholder=\"Secret Password\"\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n          pattern=\".{8,}\"\n          required\n          title=\"must be atleast 8 characters\"\n        />\n        <input className=\"btn-dark\" type=\"submit\" value=\"Login\" />\n\n        <a href=\"/register\">Don't have an account yet?</a>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { postUser, checkUsername } from \"../services/userService\";\nimport CryptoJS from \"crypto-js\";\nimport cryptico from \"cryptico\";\nconst { SHA256 } = CryptoJS;\n\nconst Register = ({ history }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const isExisting = await checkUsername(username);\n    if (isExisting) return alert(\"User with the username already exists\");\n\n    const auth = SHA256(username + password).toString();\n    const passPhrase = SHA256(auth + password).toString();\n    const privateKey = cryptico.generateRSAKey(passPhrase, 1024);\n    const publicKey = cryptico.publicKeyString(privateKey);\n\n    try {\n      await postUser({ username, auth, publicKey });\n      alert(\"Account has been created.\")\n      history.push(\"/login\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"mb\"\n          type=\"text\"\n          placeholder=\"Pseudoname\"\n          value={username}\n          onChange={({ target }) => setUsername(target.value)}\n          pattern=\".{2,}\"\n          required\n          title=\"2 characters or more\"\n        />\n        <input\n          className=\"mb\"\n          type=\"password\"\n          placeholder=\"Secret Password\"\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n          pattern=\".{8,}\"\n          required\n          title=\"must be atleast 8 characters\"\n        />\n\n        <input className=\"btn-dark\" type=\"submit\" value=\"Register\" />\n\n        <a href=\"/login\">Already have an account?</a>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport cryptico from \"cryptico\";\nimport \"./chatbubble.css\";\n\nconst ChatBubble = ({ username, msgObj, isSecret, userKeys, decryptMsg }) => {\n  const [decrypted, setDecrypted] = useState(false);\n\n  let { name, message, timestamp } = msgObj;\n  if (isSecret)\n    if (!decrypted) name = cryptico.decrypt(name, userKeys.pvk).plaintext;\n\n  const parentBubContStyle = name === username ? \"float-right max-width\" : \"\";\n  const bubContStyle = name === username ? \"float-right text-align-right\" : \"\";\n  const displayName = name === username ? \"You\" : name;\n\n  const displayTimestamp = () => {\n    if (isSecret) if (!decrypted) return \"Decrypt the Message\";\n\n    const dateTimestamp = new Date(timestamp);\n\n    const month = dateTimestamp.getMonth();\n    const date = dateTimestamp.getDate();\n    const year = dateTimestamp.getFullYear();\n    const hours = dateTimestamp.getHours();\n    const minutes = dateTimestamp.getMinutes();\n\n    return `${month}/${date}/${year} - ${hours}:${minutes}`;\n  };\n\n  const displayMessage = () => {\n    if (isSecret)\n      if (!decrypted)\n        return <i className=\"fas fa-lock\" onClick={handleDecryptMessage} />;\n\n    return message;\n  };\n\n  const handleDecryptMessage = () => {\n    setDecrypted(true);\n\n    decryptMsg(msgObj);\n  };\n\n  return (\n    <div className={parentBubContStyle}>\n      <div id=\"bubble-container\" className={bubContStyle}>\n        <b>{displayName}</b> <br />\n        <div id=\"message-bubble\" className=\"pointer\">{displayMessage()}</div> <br />\n        <small id=\"timestamp\">{displayTimestamp()}</small>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBubble;\n","import React, { useState } from \"react\";\n\nconst ChatForm = ({ sendMessage }) => {\n  const [message, setMessage] = useState(\"\");\n\n  const handleMessageChange = ({ target }) => {\n    setMessage(target.value);\n  };\n\n  const handleSendEvent = e => {\n    e.preventDefault();\n\n    if(message === \"\") return;\n\n    sendMessage(message);\n\n    setMessage(\"\");\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"message-form\">\n        <form onSubmit={handleSendEvent}>\n          <input\n            value={message}\n            onChange={handleMessageChange}\n            placeholder=\"Type a message...\"\n            type=\"text\"\n            required\n          />\n        </form>\n      </div>\n\n      <div className=\"message-submit\">\n        <button onClick={handleSendEvent}>\n          <i className=\"fas fa-paper-plane\" />\n        </button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ChatForm;\n","import React, { useState, useEffect } from \"react\";\nimport \"./chatbox.css\";\nimport ChatBubble from \"./chatbubble\";\nimport ChatForm from \"./chatForm\";\nimport cryptico from \"cryptico\";\nimport { SHA256 } from \"crypto-js\";\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(); //http://localhost:4200/\n\nconst ChatBox = ({ user, match, userKeys }) => {\n  const [chats, setChats] = useState([]);\n\n  const channel = match.params.channel;\n  const isSecret = channel !== \"global\";\n  const limit = isSecret ? 8 : 10;\n  const pbkHash = isSecret ? SHA256(userKeys.pbk).toString() : undefined;\n\n  useEffect(() => {\n    setChats([]);\n\n    socket.connect();\n\n    socket.emit(\"get-chats\", channel, limit, pbkHash);\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [channel, userKeys]);\n\n  socket.on(\"return-chats\", returnChats => {\n    updateChats(returnChats);\n  });\n\n  socket.on(\"new-message\", chat => {\n    if(isSecret) return;\n\n    const chatsToDelete = [...chats, chat];\n    const chatLimit = chatsToDelete.splice(-limit);\n    updateChats(chatLimit);\n  });\n\n  socket.on(\"new-secret-message\", chat => {\n    if(!isSecret) return;\n    \n    const chatsToDelete = [...chats, chat];\n    const chatLimit = chatsToDelete.splice(-limit);\n    updateChats(chatLimit);\n  });\n\n  const decryptMsg = msg => {\n    const _chats = [...chats];\n    const _msg = _chats.find(m => m === msg);\n\n    _msg.name = cryptico.decrypt(msg.name, userKeys.pvk).plaintext;\n    _msg.timestamp = cryptico.decrypt(msg.timestamp, userKeys.pvk).plaintext;\n    _msg.message = cryptico.decrypt(msg.message, userKeys.pvk).plaintext;\n\n    setChats(_chats);\n  };\n\n  const updateChats = newChats => {\n    setChats(newChats);\n\n    updateScroll();\n  };\n\n  const sendMessage = message => {\n    if (isSecret) sendSecret(message);\n    else sendPlain(message);\n  };\n\n  const sendSecret = message => {\n    const name = user.username;\n    const timestamp = new Date().toString();\n\n    const chatMatePbk = localStorage.getItem(\"chatmate_pbk\");\n\n    const userMsg = encryptMsg(\n      {\n        name,\n        message,\n        timestamp\n      },\n      userKeys.pbk\n    );\n\n    socket.emit(\"send-secret-msg-self\", userMsg);\n\n    const chatMateMsg = encryptMsg(\n      {\n        name,\n        message,\n        timestamp\n      },\n      chatMatePbk\n    );\n\n    socket.emit(\"send-secret-msg\", chatMateMsg);\n  };\n\n  const encryptMsg = (msgObj, pbk) => {\n    for (let k in msgObj) {\n      msgObj[k] = cryptico.encrypt(msgObj[k], pbk).cipher;\n    }\n\n    msgObj[\"pbkHash\"] = SHA256(pbk).toString();\n    msgObj[\"channel\"] = channel;\n\n    return msgObj;\n  };\n\n  const sendPlain = message => {\n    const userMsg = {\n      name: user.username,\n      channel,\n      message,\n      timestamp: new Date()\n    };\n\n    socket.emit(\"send-message\", userMsg);\n  };\n\n  const updateScroll = () => {\n    const chatbox = document.getElementById(\"chatbox\");\n    chatbox.scrollTop = chatbox.scrollHeight;\n  };\n\n  const populateChatBox = () => {\n    return chats.length === 0 ? (\n      <div className=\"chat-notif\">No messages yet. Say hello!</div>\n    ) : (\n      chats.map(m => (\n        <ChatBubble\n          key={chats.indexOf(m)}\n          username={user.username}\n          userKeys={userKeys}\n          isSecret={isSecret}\n          msgObj={m}\n          decryptMsg={decryptMsg}\n        />\n      ))\n    );\n  };\n\n  return (\n    <div className=\"grid-container chatbox-container\">\n      <div id=\"chatbox\">{populateChatBox()}</div>\n\n      <ChatForm sendMessage={sendMessage} />\n    </div>\n  );\n};\n\nexport default ChatBox;\n","import React from \"react\";\nimport CryptoJS from \"crypto-js\";\nconst MD5 = CryptoJS.MD5;\n\nconst UserItem = ({ user, currUser, history, setChannel }) => {\n  const handleChannelOpen = () => {\n    const { publicKey: userPbk } = user;\n    const { publicKey: cUserPnk } = currUser;\n    const sorted = [userPbk, cUserPnk].sort();\n    const channelId = MD5(sorted.join()).toString();\n\n    localStorage.setItem(\"chatmate_pbk\", user.publicKey);\n    setChannel(channelId);\n\n    history.push(\"/chat/ch/\" + channelId);\n  };\n\n  return (\n    <div className=\"container-item mb\">\n      <b>{user.username}</b>\n      <button onClick={handleChannelOpen}>\n        {\" \"}\n        <i className=\"fas fa-comment\" />\n      </button>\n    </div>\n  );\n};\n\nexport default UserItem;\n","import React, { useState, useEffect } from \"react\";\nimport UserItem from \"./userItem\";\nimport \"./userList.css\";\nimport { getAllUsers } from \"../../services/userService\";\n\nconst UserLists = ({ user, history, setChannel }) => {\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    const getUsers = async () => {\n      const { data: users } = await getAllUsers();\n\n      setUsers(users);\n    };\n\n    getUsers();\n  }, []);\n\n  const filteredUsers = users.filter(\n    u => u.username.match(new RegExp(search + \".*\", \"i\"))\n  );\n\n  return (\n    <React.Fragment>\n      <div className=\"list mb\">\n        {filteredUsers.map(u => (\n          <UserItem\n            key={users.indexOf(u)}\n            user={u}\n            currUser={user}\n            history={history}\n            setChannel={setChannel}\n          />\n        ))}\n      </div>\n\n      <input\n        value={search}\n        onChange={({ target }) => setSearch(target.value)}\n        placeholder=\"Search for someone to chat...\"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default UserLists;\n","import React from \"react\";\nimport displayPic from \"./profile.jpg\";\n\nconst DisplayPic = () => {\n  return (\n    <div id=\"display-pic\">\n      <img alt=\"anon\" src={displayPic} width=\"42\" />\n    </div>\n  );\n};\n\nexport default DisplayPic;\n","import React from \"react\";\n\nconst DisplayName = ({ username }) => {\n  return (\n    <div id=\"display-name\">\n      <b>{username || \"Loading...\"}</b>\n    </div>\n  );\n};\n\nexport default DisplayName;\n","import React, { useState, useEffect } from \"react\";\n\nconst DisplayBio = ({ bio, onSave }) => {\n  const [onEdit, setOnEdit] = useState(false);\n  const [_bio, setBio] = useState(\"\");\n\n  const flipEdit = () => setOnEdit(!onEdit);\n  const handleSave = e => {\n    if (bio === _bio) return flipEdit();\n    onSave(_bio);\n    flipEdit();\n  };\n\n  useEffect(() => {\n    setBio(bio);\n  }, [bio]);\n\n  return (\n    <div id=\"display-bio\">\n      {onEdit ? (\n        <React.Fragment>\n          <input\n            maxLength=\"50\"\n            value={_bio}\n            onChange={({ target }) => setBio(target.value)}\n          />\n          <i onClick={handleSave} className=\"fas fa-save\" />\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <small>{bio || \"bio\"}</small>\n          <i onClick={flipEdit} className=\"fas fa-edit\" />\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default DisplayBio;\n","import React from \"react\";\nimport \"./profile.css\";\nimport DisplayPic from \"./displayPic\";\nimport DisplayName from \"./displayName\";\nimport DisplayBio from \"./displayBio\";\n\nconst Profile = ({ user, onUpdateBio }) => {\n  const handleLogout = () => {\n    localStorage.clear();\n\n    window.location = \"/\"\n  };\n\n  return (\n    <div className=\"container grid-container\">\n      <DisplayPic />\n\n      <DisplayName username={user.username} />\n\n      <DisplayBio onSave={onUpdateBio} bio={user.bio} />\n\n      <div onClick={handleLogout} id=\"logout\">\n        <button className=\"pointer\">\n          <i className=\"fas fa-sign-out-alt\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport \"./navBar.css\";\n\nconst NavBtn = ({ fa, label, className, handleClick }) => {\n\n  return (\n    <div >\n      <button\n        onClick={handleClick}\n        className={className}\n      >\n        <i className={fa} /> {label}\n      </button>\n    </div>\n  );\n};\n\nexport default NavBtn;\n","import React from \"react\";\nimport \"./navBar.css\";\nimport NavBtn from \"./navBtn\";\n\nconst NavBar = ({ history, location, setChannel }) => {\n  return (\n    <div className=\"container-item nav mb\">\n      <div className=\"nav-grid\">\n        <NavBtn\n          fa=\"fas fa-search\"\n          label=\"\"\n          className={location.pathname !== \"/chat/ch/global\" ? \"active\" : \"\"}\n          handleClick={() => history.push(\"/chat/search\")}\n        />\n\n        <NavBtn\n          fa=\"fas fa-globe\"\n          label=\"Global\"\n          className={location.pathname === \"/chat/ch/global\" ? \"active\" : \"\"}\n          handleClick={() => {\n            history.push(\"/chat/ch/global\");\n            setChannel(\"global\");\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useState, useEffect } from \"react\";\nimport cryptico from \"cryptico\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport ChatBox from \"../chatbox/chatbox\";\nimport UserLists from \"../chatlist/userLists\";\nimport Profile from \"../profile/profile\";\nimport NavBar from \"../navBar/navbar\";\nimport { getUserProfile, updateUser } from \"../../services/userService\";\nimport \"./chat.css\";\n\nconst Chat = ({ history, location }) => {\n  const [user, setUser] = useState({});\n  const [channel, setChannel] = useState(\"global\");\n  const [userKeys, setUserKeys] = useState({});\n\n  useEffect(() => {\n    const getUser = async () => {\n      const { data: user } = await getUserProfile();\n\n      setUser(user);\n    };\n\n    setUserKeys(getKeys());\n\n    getUser();\n  }, []);\n\n  const getKeys = () => {\n    console.log(\"get keys\");\n\n    const pvk_phrase = localStorage.getItem(\"pvk_phrase\");\n\n    const pvk = cryptico.generateRSAKey(pvk_phrase, 1024);\n\n    const pbk = cryptico.publicKeyString(pvk);\n\n    return { pvk, pbk };\n  };\n\n  const handleUpdateUserBio = async bio => {\n    const _user = { ...user };\n    _user.bio = bio;\n\n    try {\n      await updateUser(user._id, _user);\n      setUser(_user);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Profile\n        onUpdateBio={handleUpdateUserBio}\n        history={history}\n        user={user}\n      />\n      <div className=\"container chat\">\n        <NavBar history={history} location={location} setChannel={setChannel} />\n\n        <Switch>\n          <Route\n            path=\"/chat/ch/:channel\"\n            render={props => (\n              <ChatBox\n                {...props}\n                user={user}\n                channel={channel}\n                userKeys={userKeys}\n              />\n            )}\n          />\n          <Route\n            path=\"/chat/list\"\n            render={props => (\n              <UserLists {...props} user={user} setChannel={setChannel} />\n            )}\n          />\n          <Redirect from=\"/chat\" to=\"/chat/list\" />\n        </Switch>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport \"./App.css\";\nimport Footer from \"./components/footer\";\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Chat from \"./components/chat/chat\";\n\nfunction App() {\n  const checkCurrentUser = () => {\n    const aUserIsLoggedIn =\n      localStorage.getItem(\"pvk_phrase\") && localStorage.getItem(\"userToken\");\n\n    return Boolean(aUserIsLoggedIn);\n  };\n\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/chat\" component={Chat} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        {checkCurrentUser() ? <Redirect from=\"/\" to=\"/chat\" /> : \"\"}\n        <Redirect from=\"/\" to=\"/login\" />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}