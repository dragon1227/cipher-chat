{"version":3,"sources":["components/profile/profile.jpg","components/footer.jsx","services/httpService.js","services/userService.js","components/login.jsx","components/register.jsx","components/chatbox/chatbubble.jsx","components/chatbox/chatForm.jsx","components/chatbox/chatbox.jsx","components/chatlist/userItem.jsx","components/chatlist/userLists.jsx","components/profile/displayPic.jsx","components/profile/displayName.jsx","components/profile/displayBio.jsx","components/profile/profile.jsx","components/navBar/navBtn.jsx","components/navBar/navbar.jsx","components/chat/chat.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","react_default","a","createElement","className","href","httpService","get","axios","post","put","delete","endpoint","getAllUsers","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","http","abrupt","sent","stop","apply","this","arguments","postUser","_ref2","_callee2","data","_context2","_x","updateUser","_ref3","_callee3","_id","_context3","concat","_x2","_x3","checkUsername","_ref4","_callee4","username","_ref5","res","_context4","Boolean","_x4","authUser","_ref6","_callee5","auth","_context5","_x5","getUserProfile","_ref7","_callee6","token","config","_context6","localStorage","getItem","headers","x-auth-token","SHA256","CryptoJS","Login","history","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","password","setPassword","handleSubmit","e","passPhrase","userToken","preventDefault","alert","toString","setItem","push","t0","console","log","clear","onSubmit","type","placeholder","value","onChange","target","Register","privateKey","publicKey","cryptico","generateRSAKey","publicKeyString","ChatBubble","userKeys","isSecret","name","message","timestamp","parentBubContStyle","decrypt","pvk","plaintext","bubContStyle","displayName","id","dateTimestamp","Date","month","getMonth","date","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","displayTimestamp","ChatForm","sendMessage","setMessage","handleSendEvent","Fragment","onClick","socket","openSocket","ChatBox","user","match","chats","setChats","channel","params","filter","pbkHash","pbk","useEffect","connect","emit","disconnect","on","updateChats","chat","toConsumableArray","updateScroll","sendSecret","chatMatePbk","userMsg","encryptMsg","chatMateMsg","msgObj","k","encrypt","cipher","sendPlain","chatbox","document","getElementById","scrollTop","scrollHeight","length","map","m","chatbox_chatbubble","assign","key","indexOf","chatForm","MD5","UserItem","currUser","setChannel","sorted","sort","channelId","join","UserLists","users","setUsers","search","setSearch","getUsers","u","userItem","DisplayPic","alt","src","displayPic","width","DisplayName","DisplayBio","bio","onSave","onEdit","setOnEdit","_bio","setBio","flipEdit","handleSave","maxLength","onKeyPress","Profile","onUpdateBio","profile_displayName","displayBio","window","location","NavBtn","fa","label","handleClick","NavBar","navBtn","pathname","Chat","setUser","_useState5","_useState6","setUserKeys","getUser","getKeys","pvk_phrase","handleUpdateUserBio","_user","objectSpread","components_profile_profile","navbar","react_router","path","render","props","chatbox_chatbox","userLists","from","to","App","component","aUserIsLoggedIn","checkCurrentUser","footer","hostname","ReactDOM","react_router_dom","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1cc2c47a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.cae08926.jpg\";","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"container\">\n      <small>\n        CipherChat | <a href=\"https://github.com/Dwyte/CipherChat\">About</a>\n      </small>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete\n};\n","import http from \"./httpService\";\n\nconst endpoint = \"/api/users\";\n\nexport const getAllUsers = async () => {\n  return await http.get(endpoint);\n}\n\nexport const postUser = async data => {\n  return await http.post(endpoint, data);\n};\n\nexport const updateUser = async (_id, data) => {\n  return await http.put(`${endpoint}/${_id}`, data);\n}\n\nexport const checkUsername = async username => {\n  const { data: res } = await http.get(`${endpoint}/${username}`);\n\n  return Boolean(res);\n};\n\nexport const authUser = async auth => {\n  return http.post(`${endpoint}/auth/`, auth);\n};\n\nexport const getUserProfile = async () => {\n  const token = localStorage.getItem(\"userToken\");\n  const config = {\n    headers: {\n      \"x-auth-token\": token\n    }\n  };\n\n  return http.get(`${endpoint}/auth`, config);\n};\n","import React, { useState } from \"react\";\nimport { authUser, checkUsername } from \"../services/userService\";\nimport CryptoJS from \"crypto-js\";\nconst { SHA256 } = CryptoJS;\n\nconst Login = ({ history }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const isExisting = await checkUsername(username);\n    if (!isExisting) return alert(\"User with the username not found.\");\n\n    const auth = SHA256(username + password).toString();\n    const passPhrase = SHA256(auth + password).toString();\n    localStorage.setItem(\"pvk_phrase\", passPhrase);\n\n    try {\n      const { data: userToken } = await authUser({ auth });\n      localStorage.setItem(\"userToken\", userToken);\n\n      alert(\"Account authenticated!\");\n      history.push(\"/chat\");\n    } catch (err) {\n      console.log(err);\n      localStorage.clear();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"mb\"\n          type=\"text\"\n          placeholder=\"Pseudoname\"\n          value={username}\n          onChange={({ target }) => setUsername(target.value)}\n        />\n        <input\n          className=\"mb\"\n          type=\"password\"\n          placeholder=\"Secret Password\"\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n        />\n        <input className=\"btn-dark\" type=\"submit\" value=\"Login\" />\n\n        <a href=\"/register\">Don't have an account yet?</a>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { postUser, checkUsername } from \"../services/userService\";\nimport CryptoJS from \"crypto-js\";\nimport cryptico from \"cryptico\";\nconst { SHA256 } = CryptoJS;\n\nconst Register = ({ history }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const isExisting = await checkUsername(username);\n    if (isExisting) return alert(\"User with the username already exists\");\n\n    const auth = SHA256(username + password).toString();\n    const passPhrase = SHA256(auth + password).toString();\n    const privateKey = cryptico.generateRSAKey(passPhrase, 1024);\n    const publicKey = cryptico.publicKeyString(privateKey);\n\n    try {\n      await postUser({ username, auth, publicKey });\n      alert(\"Account has been created.\")\n      history.push(\"/login\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"mb\"\n          type=\"text\"\n          placeholder=\"Pseudoname\"\n          value={username}\n          onChange={({ target }) => setUsername(target.value)}\n        />\n        <input\n          className=\"mb\"\n          type=\"password\"\n          placeholder=\"Secret Password\"\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n        />\n\n        <input className=\"btn-dark\" type=\"submit\" value=\"Register\" />\n\n        <a href=\"/login\">Already have an account?</a>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\nimport cryptico from \"cryptico\";\nimport \"./chatbubble.css\";\n\nconst ChatBubble = ({\n  userKeys,\n  isSecret,\n  username,\n  name,\n  message,\n  timestamp\n}) => {\n  name = isSecret ? cryptico.decrypt(name, userKeys.pvk).plaintext : name;\n\n  const parentBubContStyle = name === username ? \"float-right max-width\" : \"\";\n  const bubContStyle = name === username ? \"float-right text-align-right\" : \"\";\n  const displayName = name === username ? \"You\" : name;\n\n  const displayTimestamp = () => {\n    if (isSecret)\n      timestamp = cryptico.decrypt(timestamp, userKeys.pvk).plaintext;\n\n    const dateTimestamp = new Date(timestamp);\n\n    const month = dateTimestamp.getMonth();\n    const date = dateTimestamp.getDate();\n    const year = dateTimestamp.getFullYear();\n    const hours = dateTimestamp.getHours();\n    const minutes = dateTimestamp.getMinutes();\n\n    return `${month}/${date}/${year} - ${hours}:${minutes}`;\n  };\n\n  const displayMessage = () => {\n    if (isSecret) return cryptico.decrypt(message, userKeys.pvk).plaintext;\n\n    return message;\n  };\n\n  return (\n    <div className={parentBubContStyle}>\n      <div id=\"bubble-container\" className={bubContStyle}>\n        <b>{displayName}</b> <br />\n        <div id=\"message-bubble\">{displayMessage()}</div> <br />\n        <small id=\"timestamp\">{displayTimestamp()}</small>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBubble;\n","import React, { useState } from \"react\";\n\nconst ChatForm = ({ sendMessage }) => {\n  const [message, setMessage] = useState(\"\");\n\n  const handleMessageChange = ({ target }) => {\n    setMessage(target.value);\n  };\n\n  const handleSendEvent = e => {\n    e.preventDefault();\n\n    sendMessage(message);\n\n    setMessage(\"\");\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"message-form\">\n        <form onSubmit={handleSendEvent}>\n          <input\n            value={message}\n            onChange={handleMessageChange}\n            placeholder=\"Type a message...\"\n            type=\"text\"\n          />\n        </form>\n      </div>\n\n      <div className=\"message-submit\">\n        <button onClick={handleSendEvent}>\n          <i className=\"fas fa-paper-plane\" />\n        </button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ChatForm;\n","import React, { useState, useEffect } from \"react\";\nimport \"./chatbox.css\";\nimport ChatBubble from \"./chatbubble\";\nimport cryptico from \"cryptico\";\nimport { SHA256 } from \"crypto-js\";\nimport openSocket from \"socket.io-client\";\nimport ChatForm from \"./chatForm\";\nconst socket = openSocket();\n\nconst ChatBox = ({ user, match, userKeys }) => {\n  const [chats, setChats] = useState([]);\n\n  const channel = match.params.channel;\n  const isSecret = channel !== \"global\";\n  const filter = isSecret\n  ? { channel, pbkHash: SHA256(userKeys.pbk).toString() }\n  : { channel };\n\n  useEffect(() => {\n    setChats([]);\n\n    socket.connect();\n\n    socket.emit(\"get-chats\", filter);\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [channel, userKeys]);\n\n  socket.on(\"return-chats\", chats => {\n    updateChats(chats);\n  });\n\n  socket.on(\"new-message\", chat => {\n    updateChats([...chats, chat]);\n  });\n\n  const updateChats = chats => {\n    setChats(chats);\n    updateScroll();\n  };\n\n  const sendMessage = message => {\n    if (isSecret) sendSecret(message);\n    else sendPlain(message);\n  };\n\n  const sendSecret = message => {\n    const name = user.username;\n    const timestamp = new Date().toString();\n\n    const chatMatePbk = localStorage.getItem(\"chatmate_pbk\");\n\n    const userMsg = encryptMsg(\n      {\n        name,\n        message,\n        timestamp\n      },\n      userKeys.pbk\n    );\n\n    socket.emit(\"send-secret-msg-self\", userMsg);\n\n    const chatMateMsg = encryptMsg(\n      {\n        name,\n        message,\n        timestamp\n      },\n      chatMatePbk\n    );\n\n    socket.emit(\"send-secret-msg\", chatMateMsg);\n  };\n\n  const encryptMsg = (msgObj, pbk) => {\n    for (let k in msgObj) {\n      msgObj[k] = cryptico.encrypt(msgObj[k], pbk).cipher;\n    }\n\n    msgObj[\"pbkHash\"] = SHA256(pbk).toString();\n    msgObj[\"channel\"] = channel;\n\n    return msgObj;\n  };\n\n  const sendPlain = message => {\n    const userMsg = {\n      name: user.username,\n      channel,\n      message,\n      timestamp: new Date()\n    };\n\n    socket.emit(\"send-message\", userMsg);\n  };\n\n  const updateScroll = () => {\n    const chatbox = document.getElementById(\"chatbox\");\n    chatbox.scrollTop = chatbox.scrollHeight;\n  };\n\n  const populateChatBox = () => {\n\n    return chats.length === 0 ? (\n      <div className=\"chat-notif\">No messages yet. Say hello!</div>\n    ) : (\n      chats.map(m => (\n        <ChatBubble\n          key={chats.indexOf(m)}\n          username={user.username}\n          userKeys={userKeys}\n          isSecret={isSecret}\n          {...m}\n        />\n      ))\n    );\n  };\n\n  return (\n    <div className=\"grid-container chatbox-container\">\n      <div id=\"chatbox\">{populateChatBox()}</div>\n\n      <ChatForm sendMessage={sendMessage} />\n    </div>\n  );\n};\n\nexport default ChatBox;\n","import React from \"react\";\nimport CryptoJS from \"crypto-js\";\nconst MD5 = CryptoJS.MD5;\n\nconst UserItem = ({ user, currUser, history, setChannel }) => {\n  const handleChannelOpen = () => {\n    const { publicKey: userPbk } = user;\n    const { publicKey: cUserPnk } = currUser;\n    const sorted = [userPbk, cUserPnk].sort();\n    const channelId = MD5(sorted.join()).toString();\n\n    localStorage.setItem(\"chatmate_pbk\", user.publicKey);\n    setChannel(channelId);\n\n    history.push(\"/chat/ch/\" + channelId);\n  };\n\n  return (\n    <div className=\"container-item mb\">\n      <b>{user.username}</b>\n      <button onClick={handleChannelOpen}>\n        {\" \"}\n        <i className=\"fas fa-comment\" />\n      </button>\n    </div>\n  );\n};\n\nexport default UserItem;\n","import React, { useState, useEffect } from \"react\";\nimport UserItem from \"./userItem\";\nimport \"./userList.css\";\nimport { getAllUsers } from \"../../services/userService\";\n\nconst UserLists = ({ user, history, setChannel }) => {\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    const getUsers = async () => {\n      const { data: users } = await getAllUsers();\n\n      setUsers(users);\n    };\n\n    getUsers();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className=\"list mb\">\n        {users.map(u => (\n          <UserItem\n            key={users.indexOf(u)}\n            user={u}\n            currUser={user}\n            history={history}\n            setChannel={setChannel}\n          />\n        ))}\n      </div>\n\n      <input\n        value={search}\n        onChange={({ target }) => setSearch(target.value)}\n        placeholder=\"Search for someone to chat...\"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default UserLists;\n","import React from \"react\";\nimport displayPic from \"./profile.jpg\";\n\nconst DisplayPic = () => {\n  return (\n    <div id=\"display-pic\">\n      <img alt=\"anon\" src={displayPic} width=\"42\" />\n    </div>\n  );\n};\n\nexport default DisplayPic;\n","import React from \"react\";\n\nconst DisplayName = ({ username }) => {\n  return (\n    <div id=\"display-name\">\n      <b>{username || \"Loading...\"}</b>\n    </div>\n  );\n};\n\nexport default DisplayName;\n","import React, { useState, useEffect } from \"react\";\n\nconst DisplayBio = ({ bio, onSave }) => {\n  const [onEdit, setOnEdit] = useState(false);\n  const [_bio, setBio] = useState(\"\");\n\n  const flipEdit = () => setOnEdit(!onEdit);\n  const handleSave = e => {\n    if (e.key === 'Enter') {\n      onSave(_bio);\n      return flipEdit();\n    }\n\n    if (bio === _bio) return flipEdit();\n    onSave(_bio);\n    flipEdit();\n  };\n\n  useEffect(() => {\n    setBio(bio);\n  }, [bio]);\n\n  return (\n    <div id=\"display-bio\">\n      {onEdit ? (\n        <React.Fragment>\n          <input\n            maxLength=\"50\"\n            value={_bio}\n            onChange={({ target }) => setBio(target.value)}\n            onKeyPress={handleSave}\n          />\n          <i onClick={handleSave} className=\"fas fa-save\" />\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <small>{bio || \"bio\"}</small>\n          <i onClick={flipEdit} className=\"fas fa-edit\" />\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default DisplayBio;\n","import React from \"react\";\nimport \"./profile.css\";\nimport DisplayPic from \"./displayPic\";\nimport DisplayName from \"./displayName\";\nimport DisplayBio from \"./displayBio\";\n\nconst Profile = ({ user, onUpdateBio }) => {\n  const handleLogout = () => {\n    localStorage.clear();\n\n    window.location = \"/\"\n  };\n\n  return (\n    <div className=\"container grid-container\">\n      <DisplayPic />\n\n      <DisplayName username={user.username} />\n\n      <DisplayBio onSave={onUpdateBio} bio={user.bio} />\n\n      <div onClick={handleLogout} id=\"logout\">\n        <button>\n          <i className=\"fas fa-sign-out-alt\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport \"./navBar.css\";\n\nconst NavBtn = ({ fa, label, className, handleClick }) => {\n\n  return (\n    <div >\n      <button\n        onClick={handleClick}\n        className={className}\n      >\n        <i className={fa} /> {label}\n      </button>\n    </div>\n  );\n};\n\nexport default NavBtn;\n","import React, { useState } from \"react\";\nimport \"./navBar.css\";\nimport NavBtn from \"./navBtn\";\n\nconst NavBar = ({ history, location, setChannel }) => {\n  return (\n    <div className=\"container-item nav mb\">\n      <div className=\"nav-grid\">\n        <NavBtn\n          fa=\"fas fa-search\"\n          label=\"\"\n          className={location.pathname !== \"/chat/ch/global\" ? \"active\" : \"\"}\n          handleClick={() => history.push(\"/chat/search\")}\n        />\n\n        <NavBtn\n          fa=\"fas fa-globe\"\n          label=\"Global\"\n          className={location.pathname === \"/chat/ch/global\" ? \"active\" : \"\"}\n          handleClick={() => {\n            history.push(\"/chat/ch/global\");\n            setChannel(\"global\");\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useState, useEffect } from \"react\";\nimport cryptico from \"cryptico\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport ChatBox from \"../chatbox/chatbox\";\nimport UserLists from \"../chatlist/userLists\";\nimport Profile from \"../profile/profile\";\nimport NavBar from \"../navBar/navbar\";\nimport { getUserProfile, updateUser } from \"../../services/userService\";\nimport \"./chat.css\";\n\nconst Chat = ({ history, location }) => {\n  const [user, setUser] = useState({});\n  const [channel, setChannel] = useState(\"global\");\n  const [userKeys, setUserKeys] = useState({});\n\n  useEffect(() => {\n    const getUser = async () => {\n      const { data: user } = await getUserProfile();\n\n      setUser(user);\n    };\n\n    setUserKeys(getKeys());\n\n    getUser();\n  }, []);\n\n  const getKeys = () => {\n    console.log(\"get keys\");\n\n    const pvk_phrase = localStorage.getItem(\"pvk_phrase\");\n\n    const pvk = cryptico.generateRSAKey(pvk_phrase, 1024);\n\n    const pbk = cryptico.publicKeyString(pvk);\n\n    return { pvk, pbk };\n  };\n\n  const handleUpdateUserBio = async bio => {\n    const _user = { ...user };\n    _user.bio = bio;\n\n    try {\n      await updateUser(user._id, _user);\n      setUser(_user);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Profile\n        onUpdateBio={handleUpdateUserBio}\n        history={history}\n        user={user}\n      />\n      <div className=\"container chat\">\n        <NavBar history={history} location={location} setChannel={setChannel} />\n\n        <Switch>\n          <Route\n            path=\"/chat/ch/:channel\"\n            render={props => (\n              <ChatBox\n                {...props}\n                user={user}\n                channel={channel}\n                userKeys={userKeys}\n              />\n            )}\n          />\n          <Route\n            path=\"/chat/list\"\n            render={props => (\n              <UserLists {...props} user={user} setChannel={setChannel} />\n            )}\n          />\n          <Redirect from=\"/chat\" to=\"/chat/list\" />\n        </Switch>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport \"./App.css\";\nimport Footer from \"./components/footer\";\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Chat from \"./components/chat/chat\";\n\nfunction App() {\n  const checkCurrentUser = () => {\n    const aUserIsLoggedIn =\n      localStorage.getItem(\"pvk_phrase\") && localStorage.getItem(\"userToken\");\n\n    return Boolean(aUserIsLoggedIn);\n  };\n\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/chat\" component={Chat} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        {checkCurrentUser() ? <Redirect from=\"/\" to=\"/chat\" /> : \"\"}\n        <Redirect from=\"/\" to=\"/login\" />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}