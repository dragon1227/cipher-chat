{"version":3,"sources":["components/profile/profile.jpg","components/footer.jsx","services/httpService.js","services/userService.js","components/login.jsx","components/register.jsx","components/chatbox/chatbubble.jsx","components/chatbox/chatForm.jsx","components/chatbox/chatbox.jsx","services/chatService.js","components/chatlist/userItem.jsx","components/chatlist/userLists.jsx","components/profile/displayPic.jsx","components/profile/displayName.jsx","components/profile/displayBio.jsx","components/profile/profile.jsx","components/navBar/navBtn.jsx","components/navBar/navbar.jsx","components/chat/chat.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","react_default","a","createElement","className","href","httpService","get","axios","post","put","delete","serviceEndpoint","process","REACT_APP_SERVICE_API","getAllUsers","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","http","abrupt","sent","stop","apply","this","arguments","postUser","_ref2","_callee2","data","_context2","_x","updateUser","_ref3","_callee3","_id","_context3","concat","_x2","_x3","checkUsername","_ref4","_callee4","username","_ref5","res","_context4","Boolean","_x4","authUser","_ref6","_callee5","auth","_context5","_x5","getUserProfile","_ref7","_callee6","token","config","_context6","localStorage","getItem","headers","x-auth-token","SHA256","CryptoJS","Login","history","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","password","setPassword","handleSubmit","e","passPhrase","userToken","preventDefault","alert","toString","setItem","push","t0","clear","onSubmit","type","placeholder","value","onChange","target","pattern","maxLength","required","title","Register","privateKey","publicKey","cryptico","generateRSAKey","publicKeyString","ChatBubble","msgObj","isSecret","userKeys","prevMsg","decryptMsg","showTimestamp","setShowTimestamp","name","message","timestamp","decrypted","decrypt","pvk","plaintext","parentBubContStyle","bubContStyle","displayName","isPrevMsgSenderTheUser","prevName","prevDecrypted","id","displayNameJsx","Fragment","displayDisplayName","onClick","onMouseLeave","setTimeout","dateTimestamp","Date","month","getMonth","day","getDay","date","getDate","hours","getHours","hoursPadded","minutes","getMinutes","minutesPadded","monthStr","slice","dayStr","timestampJsx","displayTimestamp","ChatForm","sendMessage","setMessage","handleSendEvent","inputPlaceholder","dist_default","place","effect","data-tip","socket","openSocket","ChatBox","user","match","chats","setChats","channel","params","limit","pbkHash","pbk","undefined","useEffect","connect","emit","disconnect","on","returnChats","updateChats","chat","chatLimit","toConsumableArray","splice","msg","_chats","_msg","find","m","newChats","updateScroll","sendSecret","chatMatePbk","userMsg","encryptMsg","chatMateMsg","k","encrypt","cipher","sendPlain","chatbox","document","getElementById","scrollTop","scrollHeight","length","map","chatBubble","chatbox_chatbubble","key","indexOf","populateChatBox","chatForm","getChats","filter","MD5","UserItem","currUser","setChannel","setPrivChannel","messages","setMessages","getChannelId","getMsgs","sorted","sort","join","bio","channelId","UserLists","users","setUsers","search","setSearch","getUsers","filteredUsers","u","RegExp","userItem","DisplayPic","alt","src","displayPic","width","DisplayName","DisplayBio","onSave","onEdit","setOnEdit","_bio","setBio","flipEdit","Profile","onUpdateBio","profile_displayName","displayBio","window","location","NavBtn","fa","label","handleClick","NavBar","privChannel","navBtn","pathname","Chat","setUser","_useState5","_useState6","setUserKeys","_useState7","_useState8","getUser","getKeys","console","log","pvk_phrase","handleUpdateUserBio","_user","objectSpread","components_profile_profile","navbar","react_router","path","render","props","chatbox_chatbox","assign","userLists","from","to","App","component","aUserIsLoggedIn","checkCurrentUser","footer","hostname","ReactDOM","react_router_dom","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3c67cb6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.cae08926.jpg\";","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"container\">\n      <small>\n        CipherChat | <a href=\"https://github.com/Dwyte/CipherChat\">Source Code</a> <br />\n      </small>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete\n};\n","import http from \"./httpService\";\n\nconst apiEndpoint =\n  process.env.REACT_APP_SERVICE_API || \"http://localhost:4200/api\";\nconst serviceEndpoint = apiEndpoint + \"/users\";\n\nexport const getAllUsers = async () => {\n  return await http.get(serviceEndpoint);\n};\n\nexport const postUser = async data => {\n  return await http.post(serviceEndpoint, data);\n};\n\nexport const updateUser = async (_id, data) => {\n  return await http.put(`${serviceEndpoint}/${_id}`, data);\n};\n\nexport const checkUsername = async username => {\n  const { data: res } = await http.get(`${serviceEndpoint}/${username}`);\n\n  return Boolean(res);\n};\n\nexport const authUser = async auth => {\n  return http.post(`${serviceEndpoint}/auth/`, auth);\n};\n\nexport const getUserProfile = async () => {\n  const token = localStorage.getItem(\"userToken\");\n  const config = {\n    headers: {\n      \"x-auth-token\": token\n    }\n  };\n\n  return http.get(`${serviceEndpoint}/auth`, config);\n};\n","import React, { useState } from \"react\";\nimport { authUser, checkUsername } from \"../services/userService\";\nimport CryptoJS from \"crypto-js\";\nconst { SHA256 } = CryptoJS;\n\nconst Login = ({ history }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const isExisting = await checkUsername(username);\n    if (!isExisting) return alert(\"User with the username not found.\");\n\n    const auth = SHA256(username + password).toString();\n    const passPhrase = SHA256(auth + password).toString();\n    localStorage.setItem(\"pvk_phrase\", passPhrase);\n\n    try {\n      const { data: userToken } = await authUser({ auth });\n      localStorage.setItem(\"userToken\", userToken);\n\n      alert(\"Account authenticated!\");\n      history.push(\"/chat\");\n    } catch (err) {\n      alert(\"Authentication Failed: Wrong Credentials\");\n\n      localStorage.clear();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"mb\"\n          type=\"text\"\n          placeholder=\"Pseudoname\"\n          value={username}\n          onChange={({ target }) => setUsername(target.value)}\n          pattern=\".{2,12}\"\n          maxLength=\"12\"\n          required\n          title=\"2 characters or more\"\n        />\n        <input\n          className=\"mb\"\n          type=\"password\"\n          placeholder=\"Secret Password\"\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n          pattern=\".{8,}\"\n          required\n          title=\"must be atleast 8 characters\"\n        />\n        <input className=\"btn-dark\" type=\"submit\" value=\"Login\" />\n\n        <a href=\"/register\">Don't have an account yet?</a>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { postUser, checkUsername } from \"../services/userService\";\nimport CryptoJS from \"crypto-js\";\nimport cryptico from \"cryptico\";\nconst { SHA256 } = CryptoJS;\n\nconst Register = ({ history }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const isExisting = await checkUsername(username);\n    if (isExisting) return alert(\"User with the username already exists\");\n\n    const auth = SHA256(username + password).toString();\n    const passPhrase = SHA256(auth + password).toString();\n    const privateKey = cryptico.generateRSAKey(passPhrase, 1024);\n    const publicKey = cryptico.publicKeyString(privateKey);\n\n    try {\n      await postUser({ username, auth, publicKey });\n      alert(\"Account has been created.\");\n      history.push(\"/login\");\n    } catch (err) {\n      alert(\"Error: \", err);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"mb\"\n          type=\"text\"\n          placeholder=\"Pseudoname\"\n          value={username}\n          onChange={({ target }) => setUsername(target.value)}\n          pattern=\".{2,12}\"\n          maxLength=\"12\"\n          required\n          title=\"2 characters or more\"\n        />\n        <input\n          className=\"mb\"\n          type=\"password\"\n          placeholder=\"Secret Password\"\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n          pattern=\".{8,}\"\n          required\n          title=\"must be atleast 8 characters\"\n        />\n\n        <input className=\"btn-dark\" type=\"submit\" value=\"Register\" />\n\n        <a href=\"/login\">Already have an account?</a>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport cryptico from \"cryptico\";\nimport \"./chatbubble.css\";\n\nconst ChatBubble = ({\n  username,\n  msgObj,\n  isSecret,\n  userKeys,\n  prevMsg,\n  decryptMsg\n}) => {\n  const [showTimestamp, setShowTimestamp] = useState(false);\n\n  let { name, message, timestamp, decrypted } = msgObj;\n\n  if (isSecret)\n    if (!decrypted) {\n      name = cryptico.decrypt(name, userKeys.pvk).plaintext;\n      if (name === username) decryptMsg(msgObj);\n    }\n\n  const parentBubContStyle = name === username ? \"float-right max-width\" : \"\";\n  const bubContStyle = name === username ? \"float-right text-align-right\" : \"\";\n  const displayName = name === username ? \"You\" : name;\n\n  const isPrevMsgSenderTheUser = () => {\n    if (!prevMsg) return false;\n\n    const { name: prevName, decrypted: prevDecrypted } = prevMsg;\n    const prevNamePlain = isSecret\n      ? prevDecrypted\n        ? prevName\n        : cryptico.decrypt(prevName, userKeys.pvk).plaintext\n      : prevName;\n    return prevNamePlain === name;\n  };\n\n  const displayDisplayName = () => {\n    const displayNameJsx = (\n      <React.Fragment>\n        <div id=\"displayName\">{displayName}</div>\n      </React.Fragment>\n    );\n\n    if (isPrevMsgSenderTheUser()) return;\n    else return displayNameJsx;\n  };\n\n  const displayTimestamp = () => {\n    if (isSecret) if (!decrypted) return <div id=\"timestamp\">Decrypt</div>;\n\n    const monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n\n    const dayNames = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ];\n\n    const dateTimestamp = new Date(timestamp);\n\n    const month = dateTimestamp.getMonth();\n    const day = dateTimestamp.getDay();\n    const date = dateTimestamp.getDate();\n    const hours = dateTimestamp.getHours();\n    const hoursPadded = hours < 10 ? `0${hours}` : hours;\n    const minutes = dateTimestamp.getMinutes();\n    const minutesPadded = minutes < 10 ? `0${minutes}` : minutes;\n\n    const monthStr = monthNames[month].slice(0, 3);\n    const dayStr = dayNames[day].slice(0, 3);\n\n    const timestampJsx = `${monthStr} ${date}, ${dayStr} - ${hoursPadded}:${minutesPadded}`;\n\n    return (\n      <div id=\"timestamp\">\n        <i className=\"fas fa-caret-right\" />\n        {timestampJsx}\n      </div>\n    );\n  };\n\n  const displayMessage = () => {\n    if (isSecret) if (!decrypted) return <i className=\"fas fa-lock\" />;\n\n    return message;\n  };\n\n  const handleDecryptMessage = () => {\n    if (!isSecret) return;\n\n    decryptMsg(msgObj);\n  };\n\n  return (\n    <div className={parentBubContStyle}>\n      <div id=\"bubble-container\" className={bubContStyle}>\n        {displayDisplayName()}\n        <div\n          id=\"message-bubble\"\n          className={`pointer ${isPrevMsgSenderTheUser() ? \"mt-sm\" : \"\"}`}\n          onClick={\n            isSecret\n              ? decrypted\n                ? () => setShowTimestamp(!showTimestamp)\n                : handleDecryptMessage\n              : () => setShowTimestamp(!showTimestamp)\n          }\n          onMouseLeave={() => setTimeout(() => setShowTimestamp(false), 1250)}\n        >\n          {displayMessage()}\n        </div>\n        <br />\n        {showTimestamp ? displayTimestamp() : null}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBubble;\n","import React, { useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\n\nconst ChatForm = ({ sendMessage, isSecret }) => {\n  const [message, setMessage] = useState(\"\");\n\n  const handleMessageChange = ({ target }) => {\n    setMessage(target.value);\n  };\n\n  const handleSendEvent = e => {\n    e.preventDefault();\n\n    if (message === \"\") return;\n\n    sendMessage(message);\n\n    setMessage(\"\");\n  };\n\n  const inputPlaceholder = isSecret\n    ? \"Private Channel - Encrypted - 10msgs max\"\n    : \"Global Channel - Plain Text - 100msgs max\";\n\n  return (\n    <React.Fragment>\n      <ReactTooltip place=\"top\" effect=\"solid\"/>\n\n      <div className=\"message-form\">\n        <form onSubmit={handleSendEvent}>\n          <input\n            value={message}\n            onChange={handleMessageChange}\n            data-tip={inputPlaceholder}\n            placeholder=\"Start Chatting...\"\n            type=\"text\"\n            required\n          />\n        </form>\n      </div>\n\n      <div className=\"message-submit\">\n        <button onClick={handleSendEvent}>\n          <i className=\"fas fa-paper-plane\" />\n        </button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ChatForm;\n","import React, { useState, useEffect } from \"react\";\nimport \"./chatbox.css\";\nimport ChatBubble from \"./chatbubble\";\nimport ChatForm from \"./chatForm\";\nimport cryptico from \"cryptico\";\nimport { SHA256 } from \"crypto-js\";\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(\n  process.env.REACT_APP_SOCKET_ENDPOINT || \"http://localhost:4200\"\n);\n\nconst ChatBox = ({ user, match, userKeys }) => {\n  const [chats, setChats] = useState([]);\n\n  const channel = match.params.channel;\n  const isSecret = channel !== \"global\";\n  const limit = isSecret ? 10 : 100;\n  const pbkHash = isSecret ? SHA256(userKeys.pbk).toString() : undefined;\n\n  useEffect(() => {\n    setChats([]);\n\n    socket.connect();\n\n    socket.emit(\"get-chats\", channel, limit, pbkHash);\n\n    return () => {\n      socket.disconnect();\n    };\n     // eslint-disable-next-line\n  }, [channel, userKeys]);\n\n  socket.on(\"return-chats\", returnChats => {\n    updateChats(returnChats);\n  });\n\n  socket.on(\"new-message\", chat => {\n    if (isSecret) return;\n\n    const chatsToDelete = [...chats, chat];\n    const chatLimit = chatsToDelete.splice(-limit);\n    updateChats(chatLimit);\n  });\n\n  socket.on(\"new-secret-message\", chat => {\n    if (!isSecret) return;\n\n    const chatsToDelete = [...chats, chat];\n    const chatLimit = chatsToDelete.splice(-limit);\n\n    updateChats(chatLimit);\n  });\n\n  const decryptMsg = msg => {\n    const _chats = [...chats];\n    const _msg = _chats.find(m => m === msg);\n\n    _msg.name = cryptico.decrypt(msg.name, userKeys.pvk).plaintext;\n    _msg.timestamp = cryptico.decrypt(msg.timestamp, userKeys.pvk).plaintext;\n    _msg.message = cryptico.decrypt(msg.message, userKeys.pvk).plaintext;\n    _msg.decrypted = true;\n\n    setChats(_chats);\n  };\n\n  const updateChats = newChats => {\n    setChats(newChats);\n\n    updateScroll();\n  };\n\n  const sendMessage = message => {\n    if (isSecret) sendSecret(message);\n    else sendPlain(message);\n  };\n\n  const sendSecret = message => {\n    const name = user.username;\n    const timestamp = new Date().toString();\n\n    const chatMatePbk = localStorage.getItem(\"chatmate_pbk\");\n\n    const userMsg = encryptMsg(\n      {\n        name,\n        message,\n        timestamp\n      },\n      userKeys.pbk\n    );\n\n    socket.emit(\"send-secret-msg-self\", userMsg);\n\n    if (userKeys.pbk === chatMatePbk) return;\n\n    const chatMateMsg = encryptMsg(\n      {\n        name,\n        message,\n        timestamp\n      },\n      chatMatePbk\n    );\n\n    socket.emit(\"send-secret-msg\", chatMateMsg);\n  };\n\n  const encryptMsg = (msgObj, pbk) => {\n    for (let k in msgObj) {\n      msgObj[k] = cryptico.encrypt(msgObj[k], pbk).cipher;\n    }\n\n    msgObj[\"pbkHash\"] = SHA256(pbk).toString();\n    msgObj[\"channel\"] = channel;\n\n    return msgObj;\n  };\n\n  const sendPlain = message => {\n    const userMsg = {\n      name: user.username,\n      channel,\n      message,\n      timestamp: new Date()\n    };\n\n    socket.emit(\"send-message\", userMsg);\n  };\n\n  const updateScroll = () => {\n    const chatbox = document.getElementById(\"chatbox\");\n    chatbox.scrollTop = chatbox.scrollHeight;\n  };\n\n  const populateChatBox = () => {\n    let prevMsg = null;\n\n    return chats.length === 0 ? (\n      <div className=\"chat-notif\">No messages yet. Say hello!</div>\n    ) : (\n      chats.map(m => {\n        const chatBubble = (\n          <ChatBubble\n            key={chats.indexOf(m)}\n            username={user.username}\n            userKeys={userKeys}\n            isSecret={isSecret}\n            msgObj={m}\n            prevMsg={prevMsg}\n            decryptMsg={decryptMsg}\n          />\n        );\n\n        prevMsg = m;\n\n        return chatBubble;\n      })\n    );\n  };\n\n  return (\n    <div className=\"grid-container chatbox-container\">\n      <div id=\"chatbox\">{populateChatBox()}</div>\n\n      <ChatForm sendMessage={sendMessage} isSecret={isSecret} />\n    </div>\n  );\n};\n\nexport default ChatBox;\n","import http from \"./httpService\";\n\nconst apiEndpoint =\n  process.env.REACT_APP_SERVICE_API || \"http://localhost:4200/api\";\nconst serviceEndpoint = apiEndpoint + \"/chats\";\n\nexport const getChats = async (filter) => {\n  const token = localStorage.getItem(\"userToken\");\n  const config = {\n    headers: {\n      \"x-auth-token\": token\n    }\n  };\n\n  return await http.put(serviceEndpoint, filter, config);\n};\n","import React, { useEffect, useState } from \"react\";\nimport CryptoJS from \"crypto-js\";\nimport ReactTooltip from \"react-tooltip\";\nimport { getChats } from \"../../services/chatService\";\nconst MD5 = CryptoJS.MD5;\nconst SHA256 = CryptoJS.SHA256;\n\nconst UserItem = ({ user, currUser, history, setChannel, setPrivChannel }) => {\n  const [messages, setMessages] = useState(0);\n\n  useEffect(() => {\n    const getMsgs = async () => {\n      const filter = {\n        channel: getChannelId(),\n        pbkHash: SHA256(user.publicKey).toString()\n      };\n\n      const { data: chats } = await getChats(filter);\n\n      setMessages(chats.length);\n    };\n\n    getMsgs();\n     // eslint-disable-next-line\n  }, []);\n\n  const getChannelId = () => {\n    const { publicKey: userPbk } = user;\n    const { publicKey: cUserPnk } = currUser;\n    const sorted = [userPbk, cUserPnk].sort();\n    const channelId = MD5(sorted.join()).toString();\n\n    return channelId;\n  };\n\n  const handleChannelOpen = () => {\n    const channelId = getChannelId();\n\n    localStorage.setItem(\"chatmate_pbk\", user.publicKey);\n    setPrivChannel(user.username);\n    setChannel(channelId);\n\n    history.push(\"/chat/ch/\" + channelId);\n  };\n\n  return (\n    <div className=\"container-item mb\">\n      <ReactTooltip place=\"left\" effect=\"solid\" />\n      <div>\n        <b className=\"badge\">{messages}</b> <b>{user.username} </b>\n      </div>\n\n      <div>\n        <i\n          className=\"fas fa-info-circle\"\n          data-tip={user.username === currUser.username ? \"You\" : user.bio}\n        />{\" \"}\n        <i className=\"fas fa-comment\" onClick={handleChannelOpen} />\n      </div>\n    </div>\n  );\n};\n\nexport default UserItem;\n","import React, { useState, useEffect } from \"react\";\nimport UserItem from \"./userItem\";\nimport \"./userList.css\";\nimport { getAllUsers } from \"../../services/userService\";\n\nconst UserLists = ({ user, history, setChannel, setPrivChannel }) => {\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    const getUsers = async () => {\n      const { data: users } = await getAllUsers();\n\n      setUsers(users);\n    };\n\n    getUsers();\n  }, []);\n\n  const filteredUsers = users.filter(\n    u => u.username.match(new RegExp(search + \".*\", \"i\"))\n  );\n\n  return (\n    <React.Fragment>\n      <div className=\"list mb\">\n        {filteredUsers.map(u => (\n          <UserItem\n            key={users.indexOf(u)}\n            user={u}\n            currUser={user}\n            history={history}\n            setChannel={setChannel}\n            setPrivChannel={setPrivChannel}\n          />\n        ))}\n      </div>\n\n      <input\n        value={search}\n        onChange={({ target }) => setSearch(target.value)}\n        placeholder=\"Search for someone to chat...\"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default UserLists;\n","import React from \"react\";\nimport displayPic from \"./profile.jpg\";\n\nconst DisplayPic = () => {\n  return (\n    <div id=\"display-pic\">\n      <img alt=\"anon\" src={displayPic} width=\"42\" />\n    </div>\n  );\n};\n\nexport default DisplayPic;\n","import React from \"react\";\n\nconst DisplayName = ({ username }) => {\n  return (\n    <div id=\"display-name\">\n      <b>{username || \"Loading...\"}</b>\n    </div>\n  );\n};\n\nexport default DisplayName;\n","import React, { useState, useEffect } from \"react\";\n\nconst DisplayBio = ({ bio, onSave }) => {\n  const [onEdit, setOnEdit] = useState(false);\n  const [_bio, setBio] = useState(\"\");\n\n  const flipEdit = () => setOnEdit(!onEdit);\n  const handleSave = e => {\n    if (bio === _bio) return flipEdit();\n    onSave(_bio);\n    flipEdit();\n  };\n\n  useEffect(() => {\n    setBio(bio);\n  }, [bio]);\n\n  return (\n    <div id=\"display-bio\">\n      {onEdit ? (\n        <React.Fragment>\n          <input\n            maxLength=\"25\"\n            value={_bio}\n            onChange={({ target }) => setBio(target.value)}\n          />\n          <i onClick={handleSave} className=\"fas fa-save\" />\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <small>{bio || \"bio\"}</small>\n          <i onClick={flipEdit} className=\"fas fa-edit\" />\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default DisplayBio;\n","import React from \"react\";\nimport \"./profile.css\";\nimport DisplayPic from \"./displayPic\";\nimport DisplayName from \"./displayName\";\nimport DisplayBio from \"./displayBio\";\n\nconst Profile = ({ user, onUpdateBio }) => {\n  const handleLogout = () => {\n    localStorage.clear();\n\n    window.location = \"/\"\n  };\n\n  return (\n    <div className=\"container grid-container\">\n      <DisplayPic />\n\n      <DisplayName username={user.username} />\n\n      <DisplayBio onSave={onUpdateBio} bio={user.bio} />\n\n      <div onClick={handleLogout} id=\"logout\">\n        <button className=\"pointer\">\n          <i className=\"fas fa-sign-out-alt\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport \"./navBar.css\";\n\nconst NavBtn = ({ fa, label, className, handleClick }) => {\n\n  return (\n    <div >\n      <button\n        onClick={handleClick}\n        className={className}\n      >\n        <i className={fa} /> {label}\n      </button>\n    </div>\n  );\n};\n\nexport default NavBtn;\n","import React from \"react\";\nimport \"./navBar.css\";\nimport NavBtn from \"./navBtn\";\n\nconst NavBar = ({\n  history,\n  location,\n  setChannel,\n  privChannel,\n  setPrivChannel\n}) => {\n  return (\n    <div className=\"container-item nav mb\">\n      <div className=\"nav-grid\">\n        <NavBtn\n          fa=\"fas fa-envelope\"\n          label={privChannel}\n          className={location.pathname !== \"/chat/ch/global\" ? \"active\" : \"\"}\n          handleClick={() => {\n            setPrivChannel(\"\");\n            history.push(\"/chat/search\");\n          }}\n        />\n\n        <NavBtn\n          fa=\"fas fa-globe\"\n          label=\"Global\"\n          className={location.pathname === \"/chat/ch/global\" ? \"active\" : \"\"}\n          handleClick={() => {\n            history.push(\"/chat/ch/global\");\n            setPrivChannel(\"\");\n            setChannel(\"global\");\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useState, useEffect } from \"react\";\nimport cryptico from \"cryptico\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport ChatBox from \"../chatbox/chatbox\";\nimport UserLists from \"../chatlist/userLists\";\nimport Profile from \"../profile/profile\";\nimport NavBar from \"../navBar/navbar\";\nimport { getUserProfile, updateUser } from \"../../services/userService\";\nimport \"./chat.css\";\n\nconst Chat = ({ history, location }) => {\n  const [user, setUser] = useState({});\n  const [channel, setChannel] = useState(\"global\");\n  const [userKeys, setUserKeys] = useState({});\n  const [privChannel, setPrivChannel] = useState(\"\");\n\n  useEffect(() => {\n    const getUser = async () => {\n      const { data: user } = await getUserProfile();\n\n      setUser(user);\n    };\n\n    setUserKeys(getKeys());\n\n    getUser();\n  }, []);\n\n  const getKeys = () => {\n    console.log(\"get keys\");\n\n    const pvk_phrase = localStorage.getItem(\"pvk_phrase\");\n\n    const pvk = cryptico.generateRSAKey(pvk_phrase, 1024);\n\n    const pbk = cryptico.publicKeyString(pvk);\n\n    return { pvk, pbk };\n  };\n\n  const handleUpdateUserBio = async bio => {\n    const _user = { ...user };\n    _user.bio = bio;\n\n    try {\n      await updateUser(user._id, _user);\n      setUser(_user);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Profile\n        onUpdateBio={handleUpdateUserBio}\n        history={history}\n        user={user}\n      />\n      <div className=\"container chat\">\n        <NavBar\n          history={history}\n          location={location}\n          setChannel={setChannel}\n          privChannel={privChannel}\n          setPrivChannel={setPrivChannel}\n        />\n\n        <Switch>\n          <Route\n            path=\"/chat/ch/:channel\"\n            render={props => (\n              <ChatBox\n                {...props}\n                user={user}\n                channel={channel}\n                userKeys={userKeys}\n              />\n            )}\n          />\n          <Route\n            path=\"/chat/list\"\n            render={props => (\n              <UserLists\n                {...props}\n                user={user}\n                setChannel={setChannel}\n                setPrivChannel={setPrivChannel}\n              />\n            )}\n          />\n          <Redirect from=\"/chat\" to=\"/chat/list\" />\n        </Switch>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport \"./App.css\";\nimport Footer from \"./components/footer\";\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Chat from \"./components/chat/chat\";\n\nfunction App() {\n  const checkCurrentUser = () => {\n    const aUserIsLoggedIn =\n      localStorage.getItem(\"pvk_phrase\") && localStorage.getItem(\"userToken\");\n\n    return Boolean(aUserIsLoggedIn);\n  };\n\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/chat\" component={Chat} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        {checkCurrentUser() ? <Redirect from=\"/\" to=\"/chat\" /> : \"\"}\n        <Redirect from=\"/\" to=\"/login\" />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}